---

# #########Stopping App services###############

- name: copy the powershell files to local system
  win_copy:
    src: script/powershell.ps1
    dest: C:\temp\powershell.ps1
    
- name: Getting the list of services which are running
  win_shell: C:\temp\powershell.ps1
  register: running_services
  
- name: setting a variable to create powershell script
  set_fact:
    services_list: "{{running_services.stdout_lines | list }}"
    
- name: Stopping the services in the list
  win_shell: 'sc.exe stop "{{item}}"'
  register: Stopped_services
  loop: "{{running_services.stdout_lines}}"
  delegate_to: "{{app_server}}" 
  ignore_errors: true
    

###################Stopping SQL Service#######################

- name: stopping sql service
  # win_shell: C:\temp\powershell_sql_stop.ps1
  win_command: NET Stop MSSQLSERVER /y
  register: sql_service_stopped
  delegate_to: "{{db_server}}"
  ignore_errors: true


# ###############Rebooting App Server###########################################

- name: Rebooting App Server
  win_command: shutdown /r
  delegate_to: "{{app_server}}"
  ignore_errors: true
  
######################Rebooting DB Server##############################

- name: Rebooting DB Server
  win_command: shutdown /r
  delegate_to: "{{db_server}}"
  ignore_errors: true


  ###################### Wait For Server to Come Back ##############################

- name: Wait 160 seconds for port 5986 of any IP to close active connections
  win_wait_for:
    delegate_to: "{{db_server}}"
    port: 5986
    state: present
    timeout: 300

##########################Starting App Services##########################
  
- name: Starting the services in the list
  win_shell: 'sc.exe start "{{item}}"'
  register: started_services
  loop: "{{running_services.stdout_lines}}"
  delegate_to: "{{app_server}}"
  ignore_errors: true
  
- name: Waiting for the all the services to be started
  wait_for:
    timeout: 120
  delegate_to: "{{app_server}}"
  ignore_errors: true
